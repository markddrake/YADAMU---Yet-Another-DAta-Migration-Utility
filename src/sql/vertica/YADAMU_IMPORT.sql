--
create local temporary table if not exists INSTALLATION_STATUS(
  operation  VARCHAR(32),
  result     VARCHAR(36),
  success    BOOLEAN
);
--
delete from INSTALLATION_STATUS;
--
insert into INSTALLATION_STATUS values ('INSTALLATION_ID',UUID_GENERATE(),false);
--
update INSTALLATION_STATUS 
  set result = YADAMU.YADAMU_INSTANCE_ID(),
      success = true
where operation = 'INSTALLATION_ID';
--
\a
\t
\o YADAMU_INSTALLATION_ID.sql
select 'create or replace function YADAMU.YADAMU_INSTANCE_ID() return VARCHAR(36) as begin return ''' || result || '''; end;' from INSTALLATION_STATUS where operation = 'INSTALLATION_ID';
select 'create or replace function YADAMU.YADAMU_INSTALLATION_TIMESTAMP() return VARCHAR(36) as begin return ''' || to_char(current_timestamp,'YYYY-MM-DD"T"HH24:MI.SS.FFTZH:TZM') || ''';end;';
\o
\t
\a
--
\! type YADAMU_INSTALLATION_ID.sql
--
drop schema if exists YADAMU cascade;
--
create schema YADAMU;
--
\i YADAMU_INSTALLATION_ID.sql
--
\! rm YADAMU_INSTALLATION_ID.sql
--
select YADAMU.YADAMU_INSTANCE_ID(), YADAMU.YADAMU_INSTALLATION_TIMESTAMP();
--
/*
CREATE OR REPLACE FUNCTION YADAMU.LONG_HEX_TO_BINARY(HEX_VALUE LONG VARCHAR) 
RETURN LONG VARBINARY
AS
begin
   return NULL;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.LONG_HEX_TO_BINARY(HEX_VALUE LONG VARCHAR(32000000)) 
RETURN LONG VARBINARY(32000000)
AS
BEGIN
   RETURN (
       HEX_TO_BINARY(CAST(SUBSTR(HEX_VALUE,1,65000) as VARCHAR(65000)))::LONG VARBINARY(32000000) || HEX_TO_BINARY(CAST(SUBSTR(HEX_VALUE,65000) as VARCHAR(65000)))
	);
END;
--
*/
--
CREATE OR REPLACE FUNCTION YADAMU.LONG_HEX_TO_BINARY_L1(HEX_VALUE LONG VARCHAR(650000)) 
RETURN LONG VARBINARY(325000)
AS
BEGIN
   RETURN (
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*0) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*1) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*2) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*3) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*4) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*5) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*6) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*7) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*8) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) ||
            HEX_TO_BINARY(SUBSTR(HEX_VALUE,(65000*9) + 1,65000)::VARCHAR(65000))::LONG VARBINARY(32500) 
   );
END;
--
CREATE OR REPLACE FUNCTION YADAMU.LONG_HEX_TO_BINARY_L2(HEX_VALUE LONG VARCHAR(6500000)) 
RETURN LONG VARBINARY(3250000)
AS
BEGIN
   RETURN (
            YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*0) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
            YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*1) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*2) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*3) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*4) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*5) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*6) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*7) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*8) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L1(SUBSTR(HEX_VALUE,(650000*9) + 1,650000)::LONG VARCHAR(650000))::LONG VARBINARY(325000) 
    );
END;
--
CREATE OR REPLACE FUNCTION YADAMU.LONG_HEX_TO_BINARY(HEX_VALUE LONG VARCHAR(32000000))
RETURN LONG VARBINARY(32000000)
AS
BEGIN
   RETURN (
            YADAMU.LONG_HEX_TO_BINARY_L2(SUBSTR(HEX_VALUE,(6500000*0) + 1,6500000)::LONG VARCHAR(6500000))::LONG VARBINARY(3250000) ||
            YADAMU.LONG_HEX_TO_BINARY_L2(SUBSTR(HEX_VALUE,(6500000*1) + 1,6500000)::LONG VARCHAR(6500000))::LONG VARBINARY(3250000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L2(SUBSTR(HEX_VALUE,(6500000*2) + 1,6500000)::LONG VARCHAR(6500000))::LONG VARBINARY(3250000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L2(SUBSTR(HEX_VALUE,(6500000*3) + 1,6500000)::LONG VARCHAR(6500000))::LONG VARBINARY(3250000) ||
	        YADAMU.LONG_HEX_TO_BINARY_L2(SUBSTR(HEX_VALUE,(6500000*4) + 1,6500000)::LONG VARCHAR(6500000))::LONG VARBINARY(3250000)         
    );
END;
--
CREATE OR REPLACE FUNCTION YADAMU.RENDER_FLOAT(FLOAT_VALUE FLOAT) 
RETURN VARCHAR(1024)
AS
BEGIN
   RETURN 
     CASE 
	   WHEN FLOAT_VALUE = 'inf' THEN 
		  'Infinity' 
		WHEN  FLOAT_VALUE = '-inf' THEN 
		  '-Infinity' 
		WHEN FLOAT_VALUE <> FLOAT_VALUE THEN 
		  'NaN'
		/*
		WHEN (INSTR(TO_CHAR(FLOAT_VALUE),'e') > 0) THEN
	      CASE
            WHEN FLOAT_VALUE > 1 THEN
		      INSERT(SUBSTR(TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(650,325))),1,17),2,0,'.') || SUBSTR(TO_CHAR(FLOAT_VALUE),INSTR(TO_CHAR(FLOAT_VALUE),'e'))
		    WHEN FLOAT_VALUE < -1 THEN
		      INSERT(SUBSTR(TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(650,325))),1,18),3,0,'.') || SUBSTR(TO_CHAR(FLOAT_VALUE),INSTR(TO_CHAR(FLOAT_VALUE),'e'))
		    WHEN FLOAT_VALUE > 0 THEN
		      SUBSTR(INSERT(TRIM(BOTH '0' FROM SUBSTR(TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(650,324))),3)),2,0,'.'),1,19) || SUBSTR(TO_CHAR(FLOAT_VALUE),INSTR(TO_CHAR(FLOAT_VALUE),'e'))
		    WHEN FLOAT_VALUE < 0 THEN
		      '-' || SUBSTR(INSERT(TRIM(BOTH '0' FROM SUBSTR(TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(650,324))),4)),2,0,'.'),1,19) || SUBSTR(TO_CHAR(FLOAT_VALUE),INSTR(TO_CHAR(FLOAT_VALUE),'e'))
			ELSE 
			  '0'
		  END
		WHEN (INSTR(TO_CHAR(FLOAT_VALUE),'.') > 0) THEN
		  TRIM(TRAILING '.' FROM TRIM(TRAILING '0' FROM TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(72,36)))))
		*/
		ELSE
		  TO_CHAR(CAST(FLOAT_VALUE as NUMERIC(650,325)))
     END;
END;
--
CREATE OR REPLACE FUNCTION YADAMU.IS_JSON(JSON_VALUE LONG VARCHAR) 
RETURN BOOLEAN
AS 
BEGIN
  RETURN (TRUE);
END;
--
CREATE OR REPLACE FUNCTION YADAMU.IS_XML(JSON_VALUE LONG VARCHAR) 
RETURN BOOLEAN
AS 
BEGIN
  RETURN (TRUE);
END;
--
-- ## END COMMAND ##
--
/*
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_INTERVAL(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
begin
  return 'YADAMU.PARSE_ISO8601_INTERVAL';
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_INTERVAL(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     CASE 
		when INSTR(ISO8601_VALUE,'P') = 1 then
		  YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,2))
		when  INSTR(ISO8601_VALUE,'Y') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'Y')-1) || ' Years ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'Y')+1))		  
		when  (((INSTR(ISO8601_VALUE,'M') > 0) and (INSTR(ISO8601_VALUE,'T') = 0)) or (INSTR(ISO8601_VALUE,'M') < INSTR(ISO8601_VALUE,'T'))) then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'M')-1) || ' Months ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'M')+1))
		when  INSTR(ISO8601_VALUE,'W') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'W')-1) || ' Weeks ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'W')+1))
		when  INSTR(ISO8601_VALUE,'D') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'D')-1) || ' Days ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'D')+1))
		when  INSTR(ISO8601_VALUE,'T') > 0 then
		  YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,2))
		when  INSTR(ISO8601_VALUE,'H') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'H')-1) || ' Hours ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'H')+1))		  
		when  INSTR(ISO8601_VALUE,'M') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'M')-1) || ' Minutes ' || YADAMU.PARSE_ISO8601_INTERVAL(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'M')+1))		  
		when  INSTR(ISO8601_VALUE,'S') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'S')-1) || ' Seconds' 
		else
		  ''
     end;
END;
*/
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_SECONDS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when  INSTR(ISO8601_VALUE,'S') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'S')-1) || ' Seconds' 
		else
		  ''
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_MINUTES(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'M') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'M')-1) || ' Minutes ' || YADAMU.PARSE_ISO8601_SECONDS(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'M')+1))		  
		else
		  YADAMU.PARSE_ISO8601_SECONDS(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_HOURS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'H') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'H')-1) || ' Hours ' || YADAMU.PARSE_ISO8601_MINUTES(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'H')+1))		  
		else
		  YADAMU.PARSE_ISO8601_MINUTES(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_TIME(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'T') > 0 then
		  YADAMU.PARSE_ISO8601_HOURS(SUBSTR(ISO8601_VALUE,2))
		else 
		  ''
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_DAYS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'D') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'D')-1) || ' Days ' || YADAMU.PARSE_ISO8601_TIME(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'D')+1))		  
		else
		  YADAMU.PARSE_ISO8601_TIME(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_WEEKS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'W') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'W')-1) || ' Weeks ' || YADAMU.PARSE_ISO8601_DAYS(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'W')+1))		  
		else
		  YADAMU.PARSE_ISO8601_DAYS(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_MONTHS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when  (((INSTR(ISO8601_VALUE,'M') > 0) and (INSTR(ISO8601_VALUE,'T') = 0)) or (INSTR(ISO8601_VALUE,'M') < INSTR(ISO8601_VALUE,'T'))) then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'M')-1) || ' Months ' || YADAMU.PARSE_ISO8601_WEEKS(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'M')+1))		  
		else
		  YADAMU.PARSE_ISO8601_WEEKS(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_YEARS(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return
     case 
		when INSTR(ISO8601_VALUE,'Y') > 0 then
		  SUBSTR(ISO8601_VALUE,1,INSTR(ISO8601_VALUE,'Y')-1) || ' Years ' || YADAMU.PARSE_ISO8601_MONTHS(SUBSTR(ISO8601_VALUE,INSTR(ISO8601_VALUE,'Y')+1))		  
		else
		  YADAMU.PARSE_ISO8601_MONTHS(ISO8601_VALUE)
     end;
end;
--
CREATE OR REPLACE FUNCTION YADAMU.PARSE_ISO8601_INTERVAL(ISO8601_VALUE VARCHAR) 
return VARCHAR
as
BEGIN
   return case 
      when ISO8601_VALUE is NULL then
	    NULL
	  else
	    YADAMU.PARSE_ISO8601_YEARS(SUBSTR(ISO8601_VALUE,2))
      end;
end;
--
