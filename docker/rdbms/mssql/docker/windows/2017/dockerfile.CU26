# escape=`
FROM yadamu/svr-2016:vs22
#
RUN New-Item -ItemType "directory" C:\INSTALL; `
    New-Item -ItemType "directory" C:\INSTALL\CU   
#
# Unpack SQL Server
#
WORKDIR c:/INSTALL
COPY SQLServer2017-DEV-x64-ENU.exe .
COPY SQLServer2017-DEV-x64-ENU.box .
RUN Start-Process .\SQLServer2017-DEV-x64-ENU.exe  -Wait -ArgumentList """/x:SQLServer2017-DEV-x64-ENU""", """/u"""; `
    Remove-Item SQLServer2017-DEV-x64-ENU.exe; `
    Remove-Item SQLServer2017-DEV-x64-ENU.box
#
# Install SQL Server
#
# RUN C:\INSTALL\SQLServer2017-DEV-x64-ENU\SETUP.exe /Q /ACTION=Install /UPDATEENABLED=FALSE /FEATURES=SQLEngine /INSTANCENAME=MSSQLSERVER /SQLSVCACCOUNT='NT AUTHORITY\System' /SQLSYSADMINACCOUNTS='BUILTIN\ADMINISTRATORS' /TCPENABLED=1 /NPENABLED=0 /IACCEPTSQLSERVERLICENSETERMS=1 /SECURITYMODE=SQL /SAPWD="""oracle#1"""
#
# Invoking Setup from a script appears to bypass the issue with "username" cannot be null issue that occurs when setup is invoked directly via the RUN command 
#
COPY setup.ps1 .
COPY fixDataFileLocations.sql .
RUN .\setup.ps1
#
RUN $SQLSERVER = GET-SERVICE "MSSQLSERVER"; `
	$SQLSERVER.Start(@('/T3608','/T3609')); `
	invoke-sqlcmd -InputFile fixDataFileLocations.sql -username "sa"; `
	$SQLSERVER.stop(); `
	$SQLSERVER.Start
#
RUN Remove-Item setup.ps1; `
    Remove-Item fixDataFileLocations.sql
#
# Apply Cummlative Update KB5005226
#
COPY SQLServer2017-KB5005226-x64.exe .
RUN Start-Process .\SQLServer2017-KB5005226-x64.exe  -Wait -ArgumentList """/x:CU""", """/u"""; `
    .\CU\Setup.exe /Q /IAcceptSQLServerLicenseTerms /Action=Patch /InstanceID=MSSQLSERVER; `
    Remove-Item SQLServer2017-KB5005226-x64.exe
#
WORKDIR c:/
COPY prepareMounts.ps1 .
RUN Set-Service  -Name "MSSQLSERVER" -StartupType "Manual"; `
    Stop-Service -Name "MSSQLSERVER"; `
    c:\prepareMounts.ps1; `
    Remove-Item c:\prepareMounts.ps1
SHELL [ "powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
COPY Start.ps1 .
#ENTRYPOINT [ "powershell","c:\\Start.ps1","-ACCEPT_EULA $ENV:ACCEPT_EULA","-SA_PASSWORD $ENV:SA_PASSWORD"]
ENTRYPOINT powershell "c:\\Start.ps1 -ACCEPT_EULA $ENV:ACCEPT_EULA -SA_PASSWORD $ENV:SA_PASSWORD
#ENTRYPOINT ["powershell","wait-event"]
